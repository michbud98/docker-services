esphome:
  name: pico-test
  friendly_name: pico-test

rp2040:
  board: rpipicow
  framework:
    # Required until https://github.com/platformio/platform-raspberrypi/pull/36 is merged
    platform_version: https://github.com/maxgerhardt/platform-raspberrypi.git

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "D/4UNrGeSe888sd0mrZozTimEqvmbee8t/VOAWCpdgw="

ota:
  - platform: esphome
    password: "638e766b4ef3e80d762e977369e6fe4a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: "Pico-Test Fallback Hotspot"
    password: "FpK2rDdDUHfd"

i2c:
  sda: 20
  scl: 21

sensor:
  - platform: bme680
    temperature:
      id: "temperature"
      name: "BME680 Temperature"
      oversampling: 16x
    pressure:
      id: "pressure"
      name: "BME680 Pressure"
    humidity:
      id: "humidity"
      name: "BME680 Humidity"
    gas_resistance:
      id: "gas_resistance"
      name: "BME680 Gas Resistance"

  - platform: template
    name: "BME680 Indoor Air Quality"
    id: iaq
    icon: "mdi:gauge"
    # calculation: comp_gas = log(R_gas[ohm]) + 0.04 log(Ohm)/%rh * hum[%rh]
    lambda: |-
      return log(id(gas_resistance).state) + 0.04 *  id(humidity).state;
    state_class: "measurement"

text_sensor:
  - platform: template
    name: "BME680 IAQ Classification"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if (int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) <= 150) {
        return {"Lightly polluted"};
      }
      else if (int(id(iaq).state) <= 200) {
        return {"Moderately polluted"};
      }
      else if (int(id(iaq).state) <= 250) {
        return {"Heavily polluted"};
      }
      else if (int(id(iaq).state) <= 350) {
        return {"Severely polluted"};
      }
      else if (int(id(iaq).state) <= 500) {
        return {"Extremely polluted"};
      }
      else {
        return {"unknown"};
      }

http_request:
  timeout: 10s
  verify_ssl: false

# Http request interval
interval:
  - interval: 60s
    then:
      - http_request.post:
          url: "http://rpi-test.home.lan:1880/postSensor"
          headers:
            Content-Type: "application/json"
          json:
            temperature: !lambda 'return std::to_string(id(temperature).state);'
            pressure: !lambda 'return std::to_string(id(pressure).state);'
            humidity: !lambda 'return std::to_string(id(humidity).state);'
            sensor_id: !lambda 'return esphome::App.get_name();'
            board_type: "RP2040"
            sensor_type: "BME680"

    
# output:
#   - platform: gpio
#     pin: 32
#     id: led

# interval:
#   - interval: 1000ms
#     then:
#       - output.turn_on: led
#       - delay: 500ms
#       - output.turn_off: led